var Reusables=Reusables||{};Reusables.Breakpoints=function($){var generateKey=function(){var nextKey=1;return function(){var key="breakpoint-"+nextKey;nextKey++;return key}}(),Queue=function(){var callbacks=[];this.push=function(callback){callbacks.push(callback)};this.process=function(){for(;0!==callbacks.length;)callbacks.pop()()}},enterQueue=new Queue,Breakpoint=function($elements,range,options){this.$elements=$elements;this.range=range;this.options=options;this.key=generateKey();this.elements=function(){var isFunction="function"==typeof $elements,isString="string"==typeof $elements,isJQuery=$elements instanceof jQuery,hasSelector=isJQuery&&!!$elements.selector,elements;isFunction?elements=$elements:isString?elements=function(){return $($elements)}:isJQuery&&hasSelector?elements=function(){return $($elements.selector)}:isJQuery&&(elements=function(){return $elements});return elements}();this.min=range[0]||0;this.max=range[1]||1/0;this.name=function(name,min,max){if(name)return name;max=max===1/0?"up":max;return["breakpoint",min,max].join("-")}(options.name,this.min,this.max);"function"==typeof options.enter?this.enter=options.enter:this.enter=function(){};"function"==typeof options.exit?this.exit=options.exit:this.exit=function(){};return this};Breakpoint.prototype.evaluate=function(){var breakpoint=this;breakpoint.elements().each(function(index,element){var $element=$(element),width=$element.outerWidth(),matchNow=breakpoint.min<=width&&width<breakpoint.max,matchBefore=$element.data(breakpoint.key)||!1,change=matchNow!==matchBefore;if(change){$element.data(breakpoint.key,matchNow);var entering=change&&matchNow,exiting=change&&!matchNow;if(entering)enterQueue.push(function(){$element.addClass(breakpoint.name);breakpoint.enter($element)});else if(exiting){$element.removeClass(breakpoint.name);breakpoint.exit($element)}}})};var Breakpoints={},Builder=function($elements){this.$elements=$elements};Breakpoints.on=function($elements){return new Builder($elements)};!function(){var breakpoints=[];Builder.prototype.define=function(range,options){breakpoints.push(new Breakpoint(this.$elements,range,options));return this};Breakpoints.evaluate=function(){for(var length=breakpoints.length,i=0;i<length;i++)breakpoints[i].evaluate();enterQueue.process()}}();$(document).on("ready.reusables.breakpoints",Breakpoints.evaluate);$(window).on("resize.reusables.breakpoints",Breakpoints.evaluate);return Breakpoints}(jQuery);"undefined"!=typeof jQuery&&jQuery(function($){$("[data-breakpoints]").each(function(){var $element=$(this),breakpoints,classPrefix,builder=Reusables.Breakpoints.on($element),prefix=$element.attr("data-breakpoints-class-prefix")||"breakpoint",breakpoints=$.parseJSON($element.attr("data-breakpoints"));if($.isPlainObject(breakpoints)){$.each(breakpoints,function(name,range){builder.define(range,{name:prefix+"-"+name})});$element.removeClass(prefix+"-no-bp")}})});